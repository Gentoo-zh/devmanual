<?xml version="1.0"?>
<guide self="ebuild-writing/using-eclasses/">
<chapter>
<title>使用 Eclasses</title>

<body>
<p>
eclass 是软件包之间通用的功能库 (同lib文件类似). 详见 <uri link="::eclass-writing/" />，它涉及 eclasses 的来龙去脉, <uri link="::eclass-reference/"/>
将介绍几个常用的eclasses. 本节只是捻来别人写好的 eclass 用.
</p>
</body>

<section>
<title>函数 <c>inherit</c> </title>
<body>

<p>
通过在ebuild中添加 'inherited' 函数(由ebuild.sh提供)调用 eclass。The <c>inherit</c> 声明必须在 ebuild文件首部, 在任何函数的<e>最</e>前面。不接受条件判断语句 (除了继承的准则是缓存常数 <d/> 见 <uri
link="::general-concepts/portage-cache"/>).
</p>

<p>
在inherit类的声明之后, 它提供的函数才能被后续者调用。实例如, <c>foomatic-0.1-r2.ebuild</c>, 使用4个 eclass :
</p>

<codesample lang="ebuild">
# Copyright 1999-2010 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

EAPI="2"

inherit eutils bash-completion flag-o-matic autotools

DESCRIPTION="Tool for foo"
HOMEPAGE="http://foomatic.sf.net"
SRC_URI="mirror://sourceforge/${PN}/${P}.tar.gz"

LICENSE="GPL-2"
SLOT="0"
KEYWORDS="alpha ~amd64 ~x86 ~x86-fbsd"

RDEPEND=">=sys-libs/ncurses-5.2
    >=sys-libs/readline-4.1"
DEPEND="${RDEPEND}"

src_prepare() {
	epatch "${FILESDIR}/${P}-gentoo.patch"
	eautoreconf
}

src_configure() {
	econf --sysconfdir=/etc/devtodo
}

src_compile() {
	replace-flags -O? -O1
	emake || die "emake failed"
}

src_install() {
	emake DESTDIR="${D}" install || die "emake install failed"
	dodoc AUTHORS ChangeLog README TODO || die "dodoc failed"
	dobashcompletion "${FILESDIR}/${PN}.bash-completion" ${PN}
}

</codesample>

<p>
注意 <c>inherit</c> 声明的位置靠前.
</p>

<p>
此处 <c>eutils</c> eclass (见 <uri link="::eclass-reference/eutils.eclass/"/>) 用来调用
<c>epatch</c> 函数. <c>flag-o-matic</c> eclass (见 <uri
link="::eclass-reference/flag-o-matic.eclass/"/>) 用来 <c>replace-flags</c>, 及 <c>bash-completion</c> eclass (见 <uri link="::eclass-reference/bash-completion.eclass/"/>) 用来
处理 bash 补全，它主要是通过 <c>dobashcompletion</c> 和 <c>bash-completion_pkg_postinst</c>实现的.
</p>

</body>
</section>

</chapter>
</guide>

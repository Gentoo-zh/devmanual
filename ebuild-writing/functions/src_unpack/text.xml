<?xml version="1.0"?>
<guide self="ebuild-writing/functions/src_unpack/">
<chapter>
<title>src_unpack</title>

<body>
<table>
  <tr>
    <th>函数</th>
    <ti><c>src_unpack</c></ti>
  </tr>
  <tr>
    <th>用途</th>
    <ti>解压源码包，打必要的补丁.</ti>
  </tr>
  <tr>
    <th>Sandbox</th>
    <ti>启用</ti>
  </tr>
  <tr>
    <th>所需权限</th>
    <ti>user</ti>
  </tr>
  <tr>
    <th>被谁调用</th>
    <ti>ebuild</ti>
  </tr>
</table>
</body>

<section>
<title>默认 <c>src_unpack</c></title>
<body>
<codesample lang="ebuild">
src_unpack() {
    if [ "${A}" != "" ]; then
        unpack ${A}
    fi
}
</codesample>
</body>
</section>

<section>
<title>实例 <c>src_unpack</c></title>
<body>
<codesample lang="ebuild">
src_unpack() {
    unpack ${A}
    cd "${S}"

    epatch "${FILESDIR}/${PV}/${P}-fix-bogosity.patch"
    use pam &amp;&amp; epatch "${FILESDIR}/${PV}/${P}-pam.patch"

    sed -i -e 's/"ispell"/"aspell"/' src/defaults.h || die "Sed failed!"
}
</codesample>
<note>
当使用 EAPI >=2时, 推荐使用 <uri link="::ebuild-writing/functions/src_prepare">src_prepare</uri> 函数打补丁或更改任何源文件，不推荐使用 src_unpack函数.
</note>

</body>
</section>

<section>
<title>解压 Tarballs</title>
<body>
<p>
<c>unpack</c> 函数用来解压tarballs, 压缩文件等
。 不要手动使用 <c>tar</c>, <c>gunzip</c> 等，呵呵。
</p>

<p>
	<c>${A}</c> 变量包含 <c>SRC_URI</c> 所有元素， 
    除外 <c>SRC_URI</c> 中那些基于 USE 标示的条件控制部分。
 如果多构架的软件包需要按特定顺序解压
应尽量避免使用 <c>${A}</c>变量.
</p>
</body>
</section>

<section>
<title><c>src_unpack</c> 行动</title>
<body>
<p>
以下包含不同内容的小节在使用
<c>src_unpack</c> 函数时会经常遇到，可作参考.
</p>

<contentsTree/>
</body>
</section>

</chapter>

<include href="cvs-sources/"/>
<include href="svn-sources/"/>
<include href="tla-sources/"/>
<include href="rpm-sources/"/>
<include href="deb-sources/"/>
<include href="other-formats/"/>
</guide>

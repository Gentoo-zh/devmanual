<?xml version="1.0"?>
<guide self="ebuild-writing/functions/">
<chapter>
<title>Ebuild 函数</title>

<body>
<p>
当自源代码安装软件包是，函数调用的大致顺序为 <c>pkg_setup</c>,
<c>src_unpack</c>, <c>src_prepare</c>, <c>src_compile</c>, <c>src_test</c> (可选的, <c>FEATURES="test"</c>),
<c>src_install</c>, <c>pkg_preinst</c>, <c>pkg_postinst</c>. 但从一个二进制包安装软件包时，函数的调用顺序为 <c>pkg_setup</c>, <c>pkg_preinst</c>,
<c>pkg_postinst</c>.
因为有些概念在开始的时候没有介绍，您可以参考
<uri link="::ebuild-writing/eapi"/> 了解 EAPI规约的大概内容.
</p>

<figure short="How the ebuild functions are processed" link="diagram.png"/>

<p>
卸载软件包时会调用 <c>pkg_prerm</c> 和 <c>pkg_postrm</c> 函数。 <c>pkg_config</c> 函数可以用来作任何包的 configuration工作 <d/> 只有用户明确指定时它才会运行。
当标记为 <c>RESTRICT="fetch"</c> 的软件包需要 <c>SRC_URI</c> 中的某一部分时。 <c>pkg_nofetch</c> 函数才会启用，
</p>

<p>
从 <c>pkg_preinst</c> 函数到 <c>pkg_postinst</c> 函数, 安装文件已从沙盒程序安装至现行的系统中去, Portage 将记录安装文件包的digests过程。
</p>

<p>
当需要测试或排错时，你可以分布安装，只针对与一个 ebuild 文件运行 <c>ebuild</c> 命令，详见 <c>ebuild(1)</c> 手册阅读更多信息.
</p>
</body>

<section>
<title>目录</title>
<body>
<contentsTree/>
</body>
</section>
</chapter>

<include href="pkg_pretend/"/>
<include href="pkg_nofetch/"/>
<include href="pkg_setup/"/>
<include href="src_unpack/"/>
<include href="src_prepare/"/>
<include href="src_configure/"/>
<include href="src_compile/"/>
<include href="src_test/"/>
<include href="src_install/"/>
<include href="pkg_preinst/"/>
<include href="pkg_postinst/"/>
<include href="pkg_prerm/"/>
<include href="pkg_postrm/"/>
<include href="pkg_config/"/>
<include href="pkg_info/"/>
</guide>
